# Generated by Django 2.1.1 on 2018-09-06 13:23

from django.db import migrations

from geofr.models import Perimeter as _Perimeter


SCALES = _Perimeter.SCALES


def set_perimeters(apps, schema_editor):
    """Set new perimeter field value."""

    Aid = apps.get_model("aids", "Aid")
    Perimeter = apps.get_model("geofr", "Perimeter")
    aids = Aid.objects.all()

    try:
        europe = Perimeter.objects.get(scale=SCALES.continent)
        france = Perimeter.objects.get(scale=SCALES.country)
    except Perimeter.DoesNotExist:
        # This exception only occurs on the testing database
        europe = None
        france = None

    for aid in aids:

        if aid.application_perimeter == "europe":
            aid.perimeter = europe
        elif aid.application_perimeter == "france":
            aid.perimeter = france
        elif aid.application_perimeter == "region":
            region = Perimeter.objects.get(
                scale=SCALES.region, code=aid.application_region
            )
            aid.perimeter = region
        elif aid.application_perimeter == "department":
            department = Perimeter.objects.get(
                scale=SCALES.department, code=aid.application_department
            )
            aid.perimeter = department
        elif aid.application_perimeter == "overseas":
            aid.perimeter = france

        aid.save()


class Migration(migrations.Migration):

    dependencies = [
        ("aids", "0069_auto_20190916_1104"),
        ("geofr", "0009_auto_20180906_1439"),
    ]

    operations = [
        migrations.RunPython(set_perimeters),
    ]
