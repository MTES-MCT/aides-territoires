name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  LANG: 'fr_FR.UTF-8'
  LC_ALL: 'fr_FR.UTF-8'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    # Configure the database service
    services:
      database:
        image: postgres
        env:
          POSTGRES_USER: aides
          POSTGRES_PASSWORD: aides
          POSTGRES_DB: aides
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # List of tasks to run
    steps:

    - name: Set up french locale
      run: |
        sudo apt install language-pack-fr
        sudo locale-gen
        sudo update-locale LANG="fr_FR.UTF-8" LC_ALL="fr_FR.UTF-8"

    - name: Checkout repository code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up the npm command
      uses: actions/setup-node@v1

    - name: Set up the database
      run: |
        psql -d postgresql://aides:aides@localhost/template1 -c 'CREATE EXTENSION IF NOT EXISTS pg_trgm;'
        psql -d postgresql://aides:aides@localhost/template1 -c 'CREATE EXTENSION IF NOT EXISTS unaccent;'
      env:
        PGPASSWORD: aides

    - name: Install pip and pipenv
      working-directory: ./src
      run: |
        python -m pip install --upgrade pip
        pipenv || pip install pipenv

    - name: Use python packages cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install the required packages
      run: |
        sudo apt install gettext
        sudo npm install -g sass

    - name: Build the project
      working-directory: ./src
      run: |
        make init

    - name: Run linter
      working-directory: ./src
      run: |
        make checkstyle

    - name: Run Tests
      working-directory: ./src
      run: |
        make test
